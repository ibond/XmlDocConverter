@using System.Text;
@using System.Linq;
@using XmlDocConverter;
@using XmlDocConverter.Fluent;

@{
  Emit.Begin
       .Using(MarkdownEmitWriter.GitHub)
       .InDirectory(@"C:\Work\temp\xdc_test")
       .From(@"C:\Work\ProcessArgumentTools\ProcessArgumentTools\bin\Release\ProcessArgumentTools.dll")
       .ToFile("ProcessArgumentTools.md")
       
       .Using(new EmitWriter<AssemblyContext>(
@<text>
# Assembly: @item.Document.Name

@{
  item.Emit.Select.Structs().Write()
    .Select.Classes().Write();
}
</text>))

       .Using(new EmitWriter<ClassContext>(
@<text>
## Class: @item.Document.Name

@item.Emit.Select.Doc().Write()

### Properties
@item.Emit.Select.Properties().Write()

### Methods
@item.Emit.Select.Properties().Write()

### Fields
@item.Emit.Select.Fields().Write()
</text>))

       .Using(new EmitWriter<StructContext>(
@<text>
## Struct: @item.Document.Name

### Properties
@item.Emit.Select.Properties().Write()

### Methods
@item.Emit.Select.Properties().Write()

### Fields
@item.Emit.Select.Fields().Write()
</text>))

       .Using(new EmitWriter<FieldContext>(
        @:- Field: @item.Document.Name
        ))

       .Using(new EmitWriter<MethodContext>(
        @:- Method: @item.Document.Name
        ))

       .Using(new EmitWriter<PropertyContext>(
        @:- Property: @item.Document.Name
        ))

       .Write()
       ;
}
